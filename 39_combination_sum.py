candidates = [2,3,6,7]target = 7class Solution(object):    def combinationSum(self, candidates, target):        def backtrack(start, target, path):            if target == 0:                result.append(list(path))                return            if target < 0:                return            for i in range(start, len(candidates)):                path.append(candidates[i])                backtrack(i, target - candidates[i], path)                path.pop()        result = []        backtrack(0, target, [])        return resulttest = Solution()print(test.combinationSum(candidates, target))